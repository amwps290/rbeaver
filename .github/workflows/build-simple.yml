name: Simple Build

on:
  workflow_dispatch:
    inputs:
      create_release:
        description: 'Create a release after successful build'
        required: false
        default: false
        type: boolean
      release_tag:
        description: 'Release tag (e.g., v1.0.0)'
        required: false
        type: string

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  build-simple:
    name: Simple Build (${{ matrix.target }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            name: rbeaver-linux-x86_64
            
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            name: rbeaver-windows-x86_64.exe

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install system dependencies (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libxcb1-dev \
            libxrandr-dev \
            libxss-dev \
            libxcursor-dev \
            libxcomposite-dev \
            libasound2-dev \
            libxdamage-dev \
            libxfixes-dev \
            libxinerama-dev \
            libxi-dev \
            libxrender-dev \
            libxkbcommon-dev \
            libwayland-dev \
            libgl1-mesa-dev \
            libegl1-mesa-dev

      - name: Cache Cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-${{ matrix.target }}-simple-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.target }}-simple-cargo-

      - name: Build release binary with basic optimization
        run: cargo build --release --target ${{ matrix.target }}
        env:
          # Use only safe, compatible optimization flags
          RUSTFLAGS: "-C opt-level=3"

      - name: Prepare binary (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          cp target/${{ matrix.target }}/release/rbeaver ${{ matrix.name }}
          strip ${{ matrix.name }}

      - name: Prepare binary (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          copy target\${{ matrix.target }}\release\rbeaver.exe ${{ matrix.name }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}-simple
          path: ${{ matrix.name }}
          retention-days: 30

  create-simple-release:
    name: Create Simple Release
    runs-on: ubuntu-latest
    needs: build-simple
    if: ${{ github.event.inputs.create_release == 'true' }}
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Display structure of downloaded files
        run: ls -la artifacts/

      - name: Create simple release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.event.inputs.release_tag }}
          name: RBeaver ${{ github.event.inputs.release_tag }} (Simple Build)
          files: |
            artifacts/rbeaver-linux-x86_64-simple/rbeaver-linux-x86_64
            artifacts/rbeaver-windows-x86_64.exe-simple/rbeaver-windows-x86_64.exe
          generate_release_notes: true
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
