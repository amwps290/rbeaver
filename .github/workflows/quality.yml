name: Code Quality

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run quality checks every Sunday at 2 AM UTC
    - cron: '0 2 * * 0'

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libxcb1-dev \
            libxrandr-dev \
            libxss-dev \
            libxcursor-dev \
            libxcomposite-dev \
            libasound2-dev \
            libxdamage-dev \
            libxfixes-dev \
            libxinerama-dev \
            libxi-dev \
            libxrender-dev \
            libxkbcommon-dev \
            libwayland-dev \
            libgl1-mesa-dev \
            libegl1-mesa-dev

      - name: Cache Cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-quality-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-quality-cargo-

      - name: Check formatting
        run: cargo fmt --all -- --check

      - name: Run clippy (strict)
        run: |
          cargo clippy --all-targets --all-features -- \
            -D warnings \
            -D clippy::all \
            -D clippy::pedantic \
            -D clippy::nursery \
            -A clippy::missing_docs_in_private_items \
            -A clippy::module_name_repetitions

      - name: Check for unused dependencies
        run: |
          cargo install cargo-machete
          cargo machete

      - name: Security audit
        run: |
          cargo install cargo-audit
          cargo audit

      - name: Check for outdated dependencies
        run: |
          cargo install cargo-outdated
          cargo outdated --exit-code 1
        continue-on-error: true

  test-coverage:
    name: Test Coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: llvm-tools-preview

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libxcb1-dev \
            libxrandr-dev \
            libxss-dev \
            libxcursor-dev \
            libxcomposite-dev \
            libasound2-dev \
            libxdamage-dev \
            libxfixes-dev \
            libxinerama-dev \
            libxi-dev \
            libxrender-dev \
            libxkbcommon-dev \
            libwayland-dev \
            libgl1-mesa-dev \
            libegl1-mesa-dev

      - name: Install cargo-llvm-cov
        run: cargo install cargo-llvm-cov

      - name: Cache Cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-coverage-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-coverage-cargo-

      - name: Generate test coverage
        run: cargo llvm-cov --all-features --workspace --lcov --output-path lcov.info

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: lcov.info
          fail_ci_if_error: false
          verbose: true
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  benchmark:
    name: Performance Benchmarks
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libxcb1-dev \
            libxrandr-dev \
            libxss-dev \
            libxcursor-dev \
            libxcomposite-dev \
            libasound2-dev \
            libxdamage-dev \
            libxfixes-dev \
            libxinerama-dev \
            libxi-dev \
            libxrender-dev \
            libxkbcommon-dev \
            libwayland-dev \
            libgl1-mesa-dev \
            libegl1-mesa-dev

      - name: Cache Cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-bench-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-bench-cargo-

      - name: Run benchmarks
        run: cargo bench --all-features
        continue-on-error: true
